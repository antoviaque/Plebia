= 1. Server =

= 1a. Requirements =

    * Recent processor to be able to transcode videos quickly
    * Bandwidth 20Mbps+ up/down 

= 1b. Dependencies =

Install packages (Debian/Ubuntu):

    $ sudo apt-get install python-pip python-mechanize libxml2-dev libxslt1-dev python2.6-dev unrar python-coverage libapache2-mod-php5 libapache2-mod-wsgi
    $ sudo pip install Django==1.2.5
    $ sudo pip install django-tastypie==0.9.9
    $ sudo pip install lxml==2.3
    $ sudo pip install BeautifulSoup==3.2.0
    $ sudo pip install django-coverage==1.2
    $ sudo pip install mock==0.7.2
    $ sudo pip install django-plugins==0.2.1
    $ sudo pip install requests==0.6.6
    $ sudo easy_install South

Install development version of ffmpeg, with libvpx: http://ubuntuforums.org/showthread.php?t=786095 (works for Ubuntu and Debian - for Debian repositories to add: http://debian-multimedia.org/ )

Install deluge-console and deluged 1.3.3 

    $ wget http://download.deluge-torrent.org/source/deluge-1.3.3.tar.gz

Follow instructions at http://dev.deluge-torrent.org/wiki/Installing/Source

Then in configurations file (with deluged process not running):

    <   "max_active_downloading": 3, 
    ---
    >   "max_active_downloading": 10, 

    <   "max_active_limit": 8,
    ---
    <   "max_active_limit": 15,


= 2. Configuration =

Create plebia/settings_local.py and edit the values to fit your local environment:

    $ cp plebia/settings_local.py.example plebia/settings_local.py
    $ gvim plebia/settings_local.py

Also edit paths in the following files (FIXME - hardcoded & PHP):

    - in static/stream.php and static/banner.php
        * full_file_path
    - in webserver/apache/django.wsgi
        * path

Create downloads directory (as configure above):

    $ mkdir -p /var/www/downloads
    $ mkdir -p /var/www/downloads/series/banners/graphical /var/www/downloads/series/banners/text /var/www/downloads/series/banners/blank /var/www/downloads/series/banners/posters
    $ mkdir plebia/db

Create Mysql database with login/password configured in settings_local.py

Populate database:

    $ plebia/manage.py syncdb
    $ plebia/manage.py migrate
    $ plebia/manage.py syncplugins

Add cron (pgrep ensures there is always only one instance of the script running):

    * * * * * pgrep cron_torrent_search.sh > /dev/null || /var/www/plebia/bin/cron_torrent_search.sh &>> /var/www/plebia/log/torrent-search.log
    * * * * * pgrep cron_torrent_download.sh > /dev/null || /var/www/plebia/bin/cron_torrent_download.sh &>> /var/www/plebia/log/torrent-download.log
    * * * * * pgrep cron_package_management.sh > /dev/null || /var/www/plebia/bin/cron_package_management.sh &>> /var/www/plebia/log/package-management.log
    * * * * * pgrep cron_video_transcoding.sh > /dev/null || /var/www/plebia/bin/cron_video_transcoding.sh &>> /var/www/plebia/log/video-transcoding.log
    0 * * * * pgrep cron_contentdb_update.sh > /dev/null || /var/www/plebia/bin/cron_contentdb_update.sh &>> /var/www/plebia/log/contentdb-update.log

Select the plugin you would like to use for torrent search:

    http://localhost/admin/djangoplugins/plugin/ (login/pass being the one set during syncdb, above)


= 2a. Development environment =

Configure apache to serve:

    ProxyPass /downloads/ !
    Alias /downloads/ "/home/antoviaque/Downloads/"
    <Directory "/home/antoviaque/Downloads">
        Options -Indexes
        AllowOverride None
    </Directory>

    ProxyPass /static/ !
    Alias /static/ "/home/antoviaque/prog/plebia/static/"
    <Directory "/home/antoviaque/prog/plebia/static/">
        Options -Indexes
        AllowOverride All
    </Directory>

    Alias /media/ "/usr/local/lib/python2.6/dist-packages/django/contrib/admin/media/"
    <Directory "/usr/local/lib/python2.6/dist-packages/django/contrib/admin/media/">
        Options -Indexes
        AllowOverride All
    </Directory>

    ProxyPass / http://localhost:7070/
    ProxyPassReverse / http://localhost:7070/

= 2b. Production server =

For apache, use mod-wsgi:

    $ sudo apt-get install libapache2-mod-wsgi

Add to apache config, in virtual host:

    <Location />
        AuthUserFile /var/www/.htpasswd
        AuthGroupFile /dev/null
        AuthName "Media server - coming back soon (tm)"
        AuthType Basic

        <Limit GET>
            require valid-user
        </Limit>
    </Location>

    Alias /downloads/ "/var/www/downloads/"
    <Directory "/var/www/downloads">
        Options -Indexes
        AllowOverride None
        AddType application/octet-stream avi mpeg mpg mpe mp4 qt mov ogv webm flv wmv mkv
        AddType application/octet-stream AVI MPEG MPG MPE MP4 QT MOV OGV WEBM FLV WMV MKV

    </Directory>

    Alias /static/ "/var/www/plebia/static/"
    <Directory "/var/www/plebia/static/">
        Options -Indexes
        AllowOverride All
    </Directory>

    WSGIScriptAlias / /var/www/plebia/webserver/apache/django.wsgi

Add login/password:

    $ htpasswd -c /var/www/.htpasswd media


= 3. Running tests =

== 3a. Django/Python tests ==

Without coverage (faster):

    $ plebia/manage.py test

With coverage (slower):

    $ plebia/manage.py test_coverage

The coverage report will then be visible at http://localhost/static/tests/


== 3b. JS/QUnit tests ==

* Without coverage: Go to http://localhost/static/js/tests/

* JSCoverage install (see http://siliconforks.com/jscoverage/manual.html )

    $ svn co http://svn.siliconforks.com/jscoverage/trunk jscoverage
    $ cd jscoverage/
    $ bash ./bootstrap.sh
    $ ./configure
    $ make
    $ sudo make install

* Running JSCoverage:

    $ cd static/
    $ jscoverage --encoding=UTF-8 js/ jscoverage/

The coverage report will be at: http://localhost/static/jscoverage/jscoverage.html?tests/ 


= 4. Running =

    $ deluged
    $ sudo /etc/init.d/apache2 restart

And go to http://localhost/

If running the developer environment:

    $ plebia/manage.py runserver 0.0.0.0:7070


= A. Annex - Configuration from bare Debian 6.0 squeeze =

Edit hostname:

    # echo "my.host.org" > /etc/hostname ; hostname -F /etc/hostname

Check /root permissions:

    # chown root.root /root ; chmod 750 /root ; chmod 700 ~/.ssh

Add public key and edit password:

    # rm -f /root/ssh/authorized_keys* ; cat > /root/.ssh/authorized_keys
    # passwd

Install sudo & debian-multimedia keyring:

    # apt-get install sudo
    # mkdir dl ; cd dl ; wget http://www.debian-multimedia.org/pool/main/d/debian-multimedia-keyring/debian-multimedia-keyring_2010.12.26_all.deb ; dpkg -i debian-multimedia-keyring_2010.12.26_all.deb

Edit /etc/apt/sources.list :

deb http://mirror.ovh.net/debian/ squeeze main contrib non-free
deb-src http://mirror.ovh.net/debian/ squeeze main contrib non-free

deb http://security.debian.org/ squeeze/updates main contrib non-free
deb-src http://security.debian.org/ squeeze/updates main contrib non-free

deb http://www.debian-multimedia.org squeeze main non-free

    # apt-get update
    # apt-get dist-upgrade

